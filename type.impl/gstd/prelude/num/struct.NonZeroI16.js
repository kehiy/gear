(function() {var type_impls = {
"gstd":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZeroI16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#impl-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.34.0\">1.34.0 (const: 1.34.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.47.0\">1.34.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Option.html\" title=\"enum gstd::prelude::Option\">Option</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; &amp;mut <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if <code>*n</code> is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be currently zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><h4 class=\"code-header\">pub fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Option.html\" title=\"enum gstd::prelude::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nif the referenced integer is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.34.0\">1.34.0 (const: 1.34.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const <a href=\"gstd/prelude/num/struct.NonZeroI16.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a> = 16u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html#associatedconstant.BITS\" title=\"associated constant i16::BITS\"><code>i16::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroI16::BITS, i16::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroI16::new(-<span class=\"number\">1i16</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroI16::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU32.html\" title=\"struct gstd::prelude::num::NonZeroU32\">NonZeroU32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>one = num::NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = num::NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>a = NonZeroI16::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZeroI16::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), one);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), three);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const <a href=\"gstd/prelude/num/struct.NonZeroI16.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html#associatedconstant.MIN\" title=\"associated constant i16::MIN\"><code>i16::MIN</code></a>.</p>\n<p>Note: While most integer types are defined for every whole\nnumber between <code>MIN</code> and <code>MAX</code>, signed non-zero integers are\na special case. They have a “gap” at 0.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroI16::MIN.get(), i16::MIN);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const <a href=\"gstd/prelude/num/struct.NonZeroI16.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html#associatedconstant.MAX\" title=\"associated constant i16::MAX\"><code>i16::MAX</code></a>.</p>\n<p>Note: While most integer types are defined for every whole\nnumber between <code>MIN</code> and <code>MAX</code>, signed non-zero integers are\na special case. They have a “gap” at 0.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroI16::MAX.get(), i16::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self.\nSee <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html#method.abs\" title=\"method i16::abs\"><code>i16::abs</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI16::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.checked_abs\" class=\"fn\">checked_abs</a>(self) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Option.html\" title=\"enum gstd::prelude::Option\">Option</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked absolute value.\nChecks for overflow and returns <a href=\"gstd/prelude/enum.Option.html#variant.None\" title=\"variant gstd::prelude::Option::None\"><code>None</code></a> if\n<code>self == NonZeroI16::MIN</code>.\nThe result cannot be zero.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI16::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(pos), neg.checked_abs());\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, min.checked_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.overflowing_abs\" class=\"fn\">overflowing_abs</a>(self) -&gt; (<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self,\nwith overflow information, see\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html#method.overflowing_abs\" title=\"method i16::overflowing_abs\"><code>i16::overflowing_abs</code></a>.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI16::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>((pos, <span class=\"bool-val\">false</span>), pos.overflowing_abs());\n<span class=\"macro\">assert_eq!</span>((pos, <span class=\"bool-val\">false</span>), neg.overflowing_abs());\n<span class=\"macro\">assert_eq!</span>((min, <span class=\"bool-val\">true</span>), min.overflowing_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.saturating_abs\" class=\"fn\">saturating_abs</a>(self) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class=\"docblock\"><p>Saturating absolute value, see\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html#method.saturating_abs\" title=\"method i16::saturating_abs\"><code>i16::saturating_abs</code></a>.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI16::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min_plus = NonZeroI16::new(i16::MIN + <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI16::new(i16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(max, min.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(max, min_plus.saturating_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.wrapping_abs\" class=\"fn\">wrapping_abs</a>(self) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class=\"docblock\"><p>Wrapping absolute value, see\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html#method.wrapping_abs\" title=\"method i16::wrapping_abs\"><code>i16::wrapping_abs</code></a>.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI16::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(min, min.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(max, (-max).wrapping_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.unsigned_abs\" class=\"fn\">unsigned_abs</a>(self) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU16.html\" title=\"struct gstd::prelude::num::NonZeroU16\">NonZeroU16</a></h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self\nwithout any wrapping or panicking.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>u_pos = NonZeroU16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_pos = NonZeroI16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_neg = NonZeroI16::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>u_max = NonZeroU16::new(u16::MAX / <span class=\"number\">2 </span>+ <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(u_pos, i_pos.unsigned_abs());\n<span class=\"macro\">assert_eq!</span>(u_pos, i_neg.unsigned_abs());\n<span class=\"macro\">assert_eq!</span>(u_max, i_min.unsigned_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is positive and <code>false</code> if the\nnumber is negative.</p>\n<h5 id=\"example-6\"><a class=\"doc-anchor\" href=\"#example-6\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI16::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI16::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert!</span>(pos_five.is_positive());\n<span class=\"macro\">assert!</span>(!neg_five.is_positive());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_negative\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.is_negative\" class=\"fn\">is_negative</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is negative and <code>false</code> if the\nnumber is positive.</p>\n<h5 id=\"example-7\"><a class=\"doc-anchor\" href=\"#example-7\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI16::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI16::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert!</span>(neg_five.is_negative());\n<span class=\"macro\">assert!</span>(!pos_five.is_negative());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Option.html\" title=\"enum gstd::prelude::Option\">Option</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked negation. Computes <code>-self</code>,\nreturning <code>None</code> if <code>self == NonZeroI16::MIN</code>.</p>\n<h5 id=\"example-8\"><a class=\"doc-anchor\" href=\"#example-8\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI16::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI16::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.checked_neg(), <span class=\"prelude-val\">Some</span>(neg_five));\n<span class=\"macro\">assert_eq!</span>(min.checked_neg(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.overflowing_neg\" class=\"fn\">overflowing_neg</a>(self) -&gt; (<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Negates self, overflowing if this is equal to the minimum value.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html#method.overflowing_neg\" title=\"method i16::overflowing_neg\"><code>i16::overflowing_neg</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example-9\"><a class=\"doc-anchor\" href=\"#example-9\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI16::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI16::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.overflowing_neg(), (neg_five, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(min.overflowing_neg(), (min, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.saturating_neg\" class=\"fn\">saturating_neg</a>(self) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class=\"docblock\"><p>Saturating negation. Computes <code>-self</code>,\nreturning <a href=\"gstd/prelude/num/struct.NonZeroI16.html#associatedconstant.MAX\" title=\"associated constant gstd::prelude::num::NonZeroI16::MAX\"><code>NonZeroI16::MAX</code></a>\nif <code>self == NonZeroI16::MIN</code>\ninstead of overflowing.</p>\n<h5 id=\"example-10\"><a class=\"doc-anchor\" href=\"#example-10\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI16::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI16::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min_plus_one = NonZeroI16::new(i16::MIN + <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI16::new(i16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.saturating_neg(), neg_five);\n<span class=\"macro\">assert_eq!</span>(min.saturating_neg(), max);\n<span class=\"macro\">assert_eq!</span>(max.saturating_neg(), min_plus_one);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(self) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) negation. Computes <code>-self</code>, wrapping around at the boundary\nof the type.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html#method.wrapping_neg\" title=\"method i16::wrapping_neg\"><code>i16::wrapping_neg</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example-11\"><a class=\"doc-anchor\" href=\"#example-11\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI16::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI16::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.wrapping_neg(), neg_five);\n<span class=\"macro\">assert_eq!</span>(min.wrapping_neg(), min);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Option.html\" title=\"enum gstd::prelude::Option\">Option</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"gstd/prelude/enum.Option.html#variant.None\" title=\"variant gstd::prelude::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroI16::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI16::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI16::new(i16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#associatedconstant.MAX\" title=\"associated constant gstd::prelude::num::NonZeroI16::MAX\"><code>NonZeroI16::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroI16::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI16::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI16::new(i16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; i16::MAX</code>, or <code>self * rhs &lt; i16::MIN</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroI16::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI16::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Option.html\" title=\"enum gstd::prelude::Option\">Option</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"gstd/prelude/enum.Option.html#variant.None\" title=\"variant gstd::prelude::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroI16::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroI16::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroI16::new(i16::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"gstd/prelude/num/struct.NonZeroI16.html#associatedconstant.MIN\" title=\"associated constant gstd::prelude::num::NonZeroI16::MIN\"><code>NonZeroI16::MIN</code></a> or <a href=\"gstd/prelude/num/struct.NonZeroI16.html#associatedconstant.MAX\" title=\"associated constant gstd::prelude::num::NonZeroI16::MAX\"><code>NonZeroI16::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroI16::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroI16::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI16::new(i16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"gstd::prelude::ffi::NonZero_c_short"],["<section id=\"impl-StructuralPartialEq-for-NonZeroI16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/marker/trait.StructuralPartialEq.html\" title=\"trait gstd::prelude::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section>","StructuralPartialEq","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-Display-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/fmt/trait.Display.html\" title=\"trait gstd::prelude::fmt::Display\">Display</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"gstd/prelude/fmt/struct.Formatter.html\" title=\"struct gstd::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"gstd/prelude/fmt/struct.Error.html\" title=\"struct gstd::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"gstd/prelude/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3Ci16%3E-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-BitOr%3Ci16%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/ops/trait.BitOr.html\" title=\"trait gstd::prelude::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; &lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> as <a class=\"trait\" href=\"gstd/prelude/ops/trait.BitOr.html\" title=\"trait gstd::prelude::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"gstd/prelude/ops/trait.BitOr.html#associatedtype.Output\" title=\"type gstd::prelude::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"gstd/prelude/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<i16>","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-BitOr-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/ops/trait.BitOr.html\" title=\"trait gstd::prelude::ops::BitOr\">BitOr</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; &lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> as <a class=\"trait\" href=\"gstd/prelude/ops/trait.BitOr.html\" title=\"trait gstd::prelude::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"gstd/prelude/ops/trait.BitOr.html#associatedtype.Output\" title=\"type gstd::prelude::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"gstd/prelude/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","gstd::prelude::ffi::NonZero_c_short"],["<section id=\"impl-Eq-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-Eq-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.Eq.html\" title=\"trait gstd::prelude::Eq\">Eq</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section>","Eq","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-Ord-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.Ord.html\" title=\"trait gstd::prelude::Ord\">Ord</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; <a class=\"enum\" href=\"gstd/prelude/cmp/enum.Ordering.html\" title=\"enum gstd::prelude::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"gstd/prelude/cmp/enum.Ordering.html\" title=\"enum gstd::prelude::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"gstd/prelude/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"gstd/prelude/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"gstd/prelude/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, max: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"gstd/prelude/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-Debug-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/fmt/trait.Debug.html\" title=\"trait gstd::prelude::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"gstd/prelude/fmt/struct.Formatter.html\" title=\"struct gstd::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"gstd/prelude/fmt/struct.Error.html\" title=\"struct gstd::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"gstd/prelude/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","gstd::prelude::ffi::NonZero_c_short"],["<section id=\"impl-Copy-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-Copy-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.Copy.html\" title=\"trait gstd::prelude::Copy\">Copy</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section>","Copy","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-PartialEq-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.PartialEq.html\" title=\"trait gstd::prelude::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-Octal-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/fmt/trait.Octal.html\" title=\"trait gstd::prelude::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"gstd/prelude/fmt/struct.Formatter.html\" title=\"struct gstd::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"gstd/prelude/fmt/struct.Error.html\" title=\"struct gstd::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3Ci16%3E-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-BitOrAssign%3Ci16%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/ops/trait.BitOrAssign.html\" title=\"trait gstd::prelude::ops::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"gstd/prelude/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<i16>","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/ops/trait.BitOrAssign.html\" title=\"trait gstd::prelude::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"gstd/prelude/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-FromStr-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/str/trait.FromStr.html\" title=\"trait gstd::prelude::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.ParseIntError.html\" title=\"struct gstd::prelude::num::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, &lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> as <a class=\"trait\" href=\"gstd/prelude/str/trait.FromStr.html\" title=\"trait gstd::prelude::str::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"gstd/prelude/str/trait.FromStr.html#associatedtype.Err\" title=\"type gstd::prelude::str::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"gstd/prelude/str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-Binary-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/fmt/trait.Binary.html\" title=\"trait gstd::prelude::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"gstd/prelude/fmt/struct.Formatter.html\" title=\"struct gstd::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"gstd/prelude/fmt/struct.Error.html\" title=\"struct gstd::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZeroI8%3E-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#467\">source</a></span><a href=\"#impl-From%3CNonZeroI8%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.From.html\" title=\"trait gstd::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI8.html\" title=\"struct gstd::prelude::num::NonZeroI8\">NonZeroI8</a>&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#467\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI8.html\" title=\"struct gstd::prelude::num::NonZeroI8\">NonZeroI8</a>) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroI8</code> to <code>NonZeroI16</code> losslessly.</p>\n</div></details></div></details>","From<NonZeroI8>","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZeroU8%3E-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#481\">source</a></span><a href=\"#impl-From%3CNonZeroU8%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.From.html\" title=\"trait gstd::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU8.html\" title=\"struct gstd::prelude::num::NonZeroU8\">NonZeroU8</a>&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#481\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU8.html\" title=\"struct gstd::prelude::num::NonZeroU8\">NonZeroU8</a>) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU8</code> to <code>NonZeroI16</code> losslessly.</p>\n</div></details></div></details>","From<NonZeroU8>","gstd::prelude::ffi::NonZero_c_short"],["<section id=\"impl-StructuralEq-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-StructuralEq-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/marker/trait.StructuralEq.html\" title=\"trait gstd::prelude::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section>","StructuralEq","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZeroI32%3E-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZeroI32%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI32.html\" title=\"struct gstd::prelude::num::NonZeroI32\">NonZeroI32</a>&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI32.html\" title=\"struct gstd::prelude::num::NonZeroI32\">NonZeroI32</a>\n) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, &lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> as <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI32.html\" title=\"struct gstd::prelude::num::NonZeroI32\">NonZeroI32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" title=\"type gstd::prelude::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI32</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.TryFromIntError.html\" title=\"struct gstd::prelude::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZeroI32>","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZeroUsize%3E-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZeroUsize%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroUsize.html\" title=\"struct gstd::prelude::num::NonZeroUsize\">NonZeroUsize</a>&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroUsize.html\" title=\"struct gstd::prelude::num::NonZeroUsize\">NonZeroUsize</a>\n) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, &lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> as <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroUsize.html\" title=\"struct gstd::prelude::num::NonZeroUsize\">NonZeroUsize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" title=\"type gstd::prelude::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroUsize</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.TryFromIntError.html\" title=\"struct gstd::prelude::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZeroUsize>","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZeroU128%3E-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZeroU128%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU128.html\" title=\"struct gstd::prelude::num::NonZeroU128\">NonZeroU128</a>&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU128.html\" title=\"struct gstd::prelude::num::NonZeroU128\">NonZeroU128</a>\n) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, &lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> as <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU128.html\" title=\"struct gstd::prelude::num::NonZeroU128\">NonZeroU128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" title=\"type gstd::prelude::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU128</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.TryFromIntError.html\" title=\"struct gstd::prelude::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZeroU128>","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZeroU32%3E-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZeroU32%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU32.html\" title=\"struct gstd::prelude::num::NonZeroU32\">NonZeroU32</a>&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU32.html\" title=\"struct gstd::prelude::num::NonZeroU32\">NonZeroU32</a>\n) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, &lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> as <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU32.html\" title=\"struct gstd::prelude::num::NonZeroU32\">NonZeroU32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" title=\"type gstd::prelude::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU32</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.TryFromIntError.html\" title=\"struct gstd::prelude::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZeroU32>","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZeroI128%3E-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZeroI128%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI128.html\" title=\"struct gstd::prelude::num::NonZeroI128\">NonZeroI128</a>&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI128.html\" title=\"struct gstd::prelude::num::NonZeroI128\">NonZeroI128</a>\n) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, &lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> as <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI128.html\" title=\"struct gstd::prelude::num::NonZeroI128\">NonZeroI128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" title=\"type gstd::prelude::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI128</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.TryFromIntError.html\" title=\"struct gstd::prelude::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZeroI128>","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZeroU64%3E-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZeroU64%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU64.html\" title=\"struct gstd::prelude::num::NonZeroU64\">NonZeroU64</a>&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU64.html\" title=\"struct gstd::prelude::num::NonZeroU64\">NonZeroU64</a>\n) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, &lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> as <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU64.html\" title=\"struct gstd::prelude::num::NonZeroU64\">NonZeroU64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" title=\"type gstd::prelude::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU64</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.TryFromIntError.html\" title=\"struct gstd::prelude::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZeroU64>","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZeroI64%3E-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZeroI64%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI64.html\" title=\"struct gstd::prelude::num::NonZeroI64\">NonZeroI64</a>&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI64.html\" title=\"struct gstd::prelude::num::NonZeroI64\">NonZeroI64</a>\n) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, &lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> as <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI64.html\" title=\"struct gstd::prelude::num::NonZeroI64\">NonZeroI64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" title=\"type gstd::prelude::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI64</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.TryFromIntError.html\" title=\"struct gstd::prelude::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZeroI64>","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci16%3E-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#528\">source</a></span><a href=\"#impl-TryFrom%3Ci16%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#528\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>\n) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, &lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> as <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" title=\"type gstd::prelude::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>i16</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.TryFromIntError.html\" title=\"struct gstd::prelude::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i16>","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZeroIsize%3E-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZeroIsize%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroIsize.html\" title=\"struct gstd::prelude::num::NonZeroIsize\">NonZeroIsize</a>&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroIsize.html\" title=\"struct gstd::prelude::num::NonZeroIsize\">NonZeroIsize</a>\n) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, &lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> as <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroIsize.html\" title=\"struct gstd::prelude::num::NonZeroIsize\">NonZeroIsize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" title=\"type gstd::prelude::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroIsize</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.TryFromIntError.html\" title=\"struct gstd::prelude::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZeroIsize>","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZeroU16%3E-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZeroU16%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU16.html\" title=\"struct gstd::prelude::num::NonZeroU16\">NonZeroU16</a>&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU16.html\" title=\"struct gstd::prelude::num::NonZeroU16\">NonZeroU16</a>\n) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, &lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a> as <a class=\"trait\" href=\"gstd/prelude/trait.TryFrom.html\" title=\"trait gstd::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroU16.html\" title=\"struct gstd::prelude::num::NonZeroU16\">NonZeroU16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" title=\"type gstd::prelude::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU16</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.TryFromIntError.html\" title=\"struct gstd::prelude::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZeroU16>","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-LowerHex-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/fmt/trait.LowerHex.html\" title=\"trait gstd::prelude::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"gstd/prelude/fmt/struct.Formatter.html\" title=\"struct gstd::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"gstd/prelude/fmt/struct.Error.html\" title=\"struct gstd::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-PartialOrd-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.PartialOrd.html\" title=\"trait gstd::prelude::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Option.html\" title=\"enum gstd::prelude::Option\">Option</a>&lt;<a class=\"enum\" href=\"gstd/prelude/cmp/enum.Ordering.html\" title=\"enum gstd::prelude::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"gstd/prelude/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"gstd/prelude/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"gstd/prelude/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"gstd/prelude/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"gstd/prelude/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-UpperHex-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/fmt/trait.UpperHex.html\" title=\"trait gstd::prelude::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"gstd/prelude/fmt/struct.Formatter.html\" title=\"struct gstd::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"gstd/prelude/fmt/struct.Error.html\" title=\"struct gstd::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-Neg-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/ops/trait.Neg.html\" title=\"trait gstd::prelude::ops::Neg\">Neg</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/ops/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/ops/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"gstd/prelude/ops/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-Clone-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.Clone.html\" title=\"trait gstd::prelude::Clone\">Clone</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"gstd/prelude/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"gstd/prelude/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZeroI16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a></span><a href=\"#impl-Hash-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/hash/trait.Hash.html\" title=\"trait gstd::prelude::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1542-1547\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"gstd/prelude/hash/trait.Hasher.html\" title=\"trait gstd::prelude::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"gstd/prelude/hash/trait.Hasher.html\" title=\"trait gstd::prelude::hash::Hasher\"><code>Hasher</code></a>. <a href=\"gstd/prelude/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"gstd/prelude/hash/trait.Hasher.html\" title=\"trait gstd::prelude::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"gstd/prelude/trait.Sized.html\" title=\"trait gstd::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"gstd/prelude/hash/trait.Hasher.html\" title=\"trait gstd::prelude::hash::Hasher\"><code>Hasher</code></a>. <a href=\"gstd/prelude/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-NonZeroI16\" class=\"impl\"><a href=\"#impl-AsBytes-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsBytes for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Option.html\" title=\"enum gstd::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Option.html\" title=\"enum gstd::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Option.html\" title=\"enum gstd::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a>Read more</a></div></details></div></details>","AsBytes","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-NonZeroI16\" class=\"impl\"><a href=\"#impl-TypeInfo-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.TypeInfo.html\" title=\"trait gstd::prelude::TypeInfo\">TypeInfo</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gstd/prelude/trait.TypeInfo.html#associatedtype.Identity\" class=\"associatedtype\">Identity</a> = <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a href=\"gstd/prelude/trait.TypeInfo.html#associatedtype.Identity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.TypeInfo.html#tymethod.type_info\" class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-NonZeroI16\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.197/src/serde/ser/impls.rs.html#623-630\">source</a><a href=\"#impl-Serialize-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.197/src/serde/ser/impls.rs.html#623-630\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-NonZeroI16\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.197/src/serde/de/impls.rs.html#307-313\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.197/src/serde/de/impls.rs.html#307-313\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-NonZeroI16\" class=\"impl\"><a href=\"#impl-Encode-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.Encode.html\" title=\"trait gstd::prelude::Encode\">Encode</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Encode.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a href=\"gstd/prelude/trait.Encode.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Encode.html#method.encode_to\" class=\"fn\">encode_to</a>&lt;W&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut W</a>)<div class=\"where\">where\n    W: Output + ?<a class=\"trait\" href=\"gstd/prelude/trait.Sized.html\" title=\"trait gstd::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Encode.html#method.encode\" class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"gstd/prelude/struct.Vec.html\" title=\"struct gstd::prelude::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Encode.html#method.using_encoded\" class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"gstd/prelude/trait.FnOnce.html\" title=\"trait gstd::prelude::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; R,</div></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Encode.html#method.encoded_size\" class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a href=\"gstd/prelude/trait.Encode.html#method.encoded_size\">Read more</a></div></details></div></details>","Encode","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-NonZeroI16\" class=\"impl\"><a href=\"#impl-Decode-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.Decode.html\" title=\"trait gstd::prelude::Decode\">Decode</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Decode.html#tymethod.decode\" class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Decode.html#method.decode_into\" class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"gstd/prelude/mem/union.MaybeUninit.html\" title=\"union gstd::prelude::mem::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;DecodeFinished, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a href=\"gstd/prelude/trait.Decode.html#method.decode_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Decode.html#method.skip\" class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Result.html\" title=\"enum gstd::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a href=\"gstd/prelude/trait.Decode.html#method.skip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.Decode.html#method.encoded_fixed_size\" class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"gstd/prelude/enum.Option.html\" title=\"enum gstd::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a href=\"gstd/prelude/trait.Decode.html#method.encoded_fixed_size\">Read more</a></div></details></div></details>","Decode","gstd::prelude::ffi::NonZero_c_short"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-NonZeroI16\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gstd/prelude/trait.MaxEncodedLen.html\" title=\"trait gstd::prelude::MaxEncodedLen\">MaxEncodedLen</a> for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gstd/prelude/trait.MaxEncodedLen.html#tymethod.max_encoded_len\" class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","gstd::prelude::ffi::NonZero_c_short"],["<section id=\"impl-ConstEncodedLen-for-NonZeroI16\" class=\"impl\"><a href=\"#impl-ConstEncodedLen-for-NonZeroI16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ConstEncodedLen for <a class=\"struct\" href=\"gstd/prelude/num/struct.NonZeroI16.html\" title=\"struct gstd::prelude::num::NonZeroI16\">NonZeroI16</a></h3></section>","ConstEncodedLen","gstd::prelude::ffi::NonZero_c_short"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()